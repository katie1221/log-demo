
# 数据源配置
spring:
  datasource:
    name: test
    url: jdbc:mysql://localhost:3306/db_user?&allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSl=false
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource

    ## 配置连接池信息
    ## 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 30
    ## 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

    # 超过时间限制是否回收
    removeAbandoned: true
    # 超时时间；单位为秒。180秒=3分钟
    removeAbandonedTimeout: 180
    # 关闭abanded连接时输出错误日志
    logAbandoned: true

# 日志配置
#logging:
  #日志文件
  ##file:
    #例1：使用相对路径,就会在项目根目录下生成一个info.log文件
    #name: info.log
    #例2：在项目根目录下生成一个logs文件夹，logs文件夹里面生成一个info.log文件
    #name: logs/info.log
    #例3：使用绝对路径，这样写会在D盘下创建一个logs文件夹，logs文件夹里面生成一个info.log文件。
    ##name: D:/logs/info.log
  #日志级别 root表示所有包，也可以单独配置具体包 fatal error warn info debug trace off
    ##level:
  ## root: info


# 日志配置（xml扩展配置）

logPath: D:/logs/
logName: admin
logBusinessLevel: debug
logRootLevel: info
#logging:
#  config: classpath:logback-spring.xml